@inject NavigationManager Navega 

<div class="vertical-menu">
    <div data-simplebar="init" class="h-100">
        <div class="simplebar-wrapper" style="margin: 0px;">
            <div class="simplebar-height-auto-observer-wrapper"><div class="simplebar-height-auto-observer"></div></div><div class="simplebar-mask">
                <div class="simplebar-offset" style="right: -16.8px; bottom: 0px;">
                    <div class="simplebar-content-wrapper" style="height: 100%; overflow: hidden scroll;">
                        <div class="simplebar-content" style="padding: 0px;">

                            <div id="sidebar-menu" class="mm-active">
                                <ul class="metismenu list-unstyled mm-show" id="side-menu">
                                    <li class="menu-title" key="t-menu">Menu</li>

                                    <li class="@activeDashboard">
                                        <a @onclick = "@(()=>Navegar(1))" class="waves-effect">
                                            <i class="bx bx-home-circle"></i>
                                            <span key="t-dashboards">Dashboard</span>
                                        </a>
                                    </li>

                                    <li class="@activeControl">
                                        <a class="has-arrow waves-effect" @onclick="ExpandirControl">
                                            <i class="bx bx-layout"></i>
                                            <span key="t-layouts">Control</span>
                                        </a>
                                        <ul class="sub-menu mm-collapse @showControl" aria-expanded=@expandControl>
                                             <li class="@activeClientesExterno">
                                                <a class="has-arrow" @onclick="ExpandirClientesExterno">
                                                    Clientes
                                                </a>
                                                <ul class="sub-menu mm-collapse @showControlClienteExterno" aria-expanded=@expandControlClienteExterno>
                                                    <li><a @onclick="@(()=>Navegar(2))" class="@activeConsorcio">Consorcio</a></li>
                                                    <li><a @onclick="@(()=>Navegar(3))" class="@activeEmpresa">Empresa</a></li>
                                                    <li><a @onclick="@(()=>Navegar(4))" class="@activeSala">Sala</a></li>
                                                </ul>
                                            </li>
                                        </ul>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public string activeDashboard { get; set; } = "active";
    public string activeControl { get; set; } = "";
    public string activeClientesExterno { get; set; } = "";

    //Cliente
    public string activeConsorcio { get; set; } = "";
    public string activeEmpresa { get; set; } = "";
    public string activeSala { get; set; } = "";

    private string expandControl = "false";
    private string expandControlClienteExterno = "";

    private string showControl = "";
    private string showControlClienteExterno = "";

    void getInactivar()
    {
        activeDashboard = ""; activeControl = ""; activeClientesExterno = "";
    }


    public void Navegar(int url)
    {
        getInactivar();

        switch (url)
        {
            case 1: Navega.NavigateTo("/home"); activeDashboard = "active"; break;
            case 2: Navega.NavigateTo("/control/cliente_externo/consorcio"); activeConsorcio = "active"; activeClientesExterno = "active"; expandControlClienteExterno = "true"; break;
            case 3: Navega.NavigateTo("/control/cliente_externo/empresa"); activeEmpresa = "active"; activeClientesExterno = "active"; expandControlClienteExterno = "true"; break;
            case 4: Navega.NavigateTo("/control/cliente_externo/sala"); activeSala = "active"; activeClientesExterno = "active"; expandControlClienteExterno = "true"; break;
            default: break;
        }
    }


    private void ExpandirControl()
    {
        if (!String.IsNullOrEmpty(activeControl))
            activeControl = "";
        else
            activeControl = "mm-active";

        showControl = String.IsNullOrEmpty(showControl) ? "mm-show" : "";
        expandControl = String.IsNullOrEmpty(showControl) ? "true" : "false";
    }

    private void ExpandirClientesExterno()
    {
        showControlClienteExterno = String.IsNullOrEmpty(showControlClienteExterno) ? "mm-show" : "";
        expandControlClienteExterno = String.IsNullOrEmpty(expandControlClienteExterno) ? "true" : "false";
    }
}
