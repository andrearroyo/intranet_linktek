@page "/control/cliente_externo/consorcio"
@inject IConsorcioService consorcioService
@inject IEmpresaService empresaService
@inject ISalaService salaService

@inject SweetAlertService Swal


<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">

                <div class="float-end dropdown ms-2">
                    <a class="text-muted" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="mdi mdi-dots-horizontal font-size-18"></i>
                    </a>

                    <div class="dropdown-menu dropdown-menu-end">
                        <a class="dropdown-item" @onclick="Nuevo">Nuevo</a>
                        <a class="dropdown-item" @onclick="Actualizar">Actualizar</a>
                        <a class="dropdown-item" @onclick="Exportar">Exportar</a>
                    </div>
                </div>

                <h4 class="card-title mb-4">Listado de Consorcio</h4>

                @if (listaConsorcio == null)
                {
                    <div class="spinner"></div>
                }
                else
                {
                    <div class="table-responsive">

                        @if (listaConsorcio.Count() > 0 || listaConsorcio != null)
                        {
                            <table class="table align-middle table-nowrap mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th class="align-middle">Id</th>
                                        <th class="align-middle">Consorcio</th>
                                        <th class="align-middle">Estado</th>
                                        <th class="align-middle">Opciones</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in listaConsorcio)
                                    {
                                        <tr>
                                            <td><a href="javascript: void(0);" class="text-body fw-bold">@item.id</a> </td>
                                            <td>@item.nombre</td>
                                            <td>
                                                @if(item.estado == 1)
                                                {
                                                    <span class="badge badge-pill badge-soft-success font-size-11">Activo</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-pill badge-soft-danger font-size-11">inactivo</span>
                                                }
                                            </td>
                                            <td>
                                                <button type="button" @onclick="() => Editar(item.id)" class="btn btn-warning btn-sm btn-rounded waves-effect waves-light" data-bs-toggle="modal" data-bs-target=".transaction-detailModal">
                                                    Editar
                                                </button>
                                                <button type="button" @onclick="() => Detalle(item.id)" class="btn btn-info btn-sm btn-rounded waves-effect waves-light" style="margin-left: 5px;" data-bs-toggle="modal" data-bs-target=".transaction-detailModal">
                                                    Detalles
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@if (mostrarModal)
{
    <div class="modal fade bs-example-modal-lg show" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-modal="true" role="dialog" style="display: block;">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@categoria Consorcio</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="">
                            <label for="lblEmpresa" class="col-form-label">Consorcio:</label>
                            <input type="text" class="form-control" id="lblEmpresa" @bind-value="@itemConsorcio.nombre">
                        </div>
                        <div class="">
                            <label for="optEstado" class="col-form-label">Estado:</label>
                            <select class="form-select" @bind="@itemConsorcio.estado">
                                <option value="-1">Seleccione estado</option>
                                @foreach (var item in listaEstados)
                                {
                                    if (item.id == itemConsorcio.estado)
                                    {
                                        <option value="@item.id" selected>@item.nombre</option>
                                    }
                                    else
                                    {
                                        <option value="@item.id">@item.nombre</option>
                                    }
                                }
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="Close">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="Registrar">Registrar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@if (mostrarDetalle)
{
    <div class="offcanvas offcanvas-end show" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel" style="visibility: visible;" aria-modal="true" role="dialog">
        <div class="offcanvas-header">
            <h4 id="offcanvasRightLabel">Detalle</h4>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close" @onclick="@CloseCanvas"></button>
        </div>
        <div class="offcanvas-body">
            <div class="row">
                <div class="col-lg-12 col-sm-8">
                    <div class="">
                        <h5 class="text-primary">@itemConsorcio.nombre</h5>
                        <p>Detalle</p>
                    </div>

                    <div class="tab-pane active" id="transactions-all-tab" role="tabpanel">
                        <div class="table-responsive" data-simplebar="init" style="max-height: 330px;">
                            <div class="simplebar-wrapper" style="margin: 0px;">
                                <div class="simplebar-height-auto-observer-wrapper"><div class="simplebar-height-auto-observer"></div></div><div class="simplebar-mask">
                                    <div class="simplebar-offset" style="right: -16.8px; bottom: 0px;">
                                        <div class="simplebar-content-wrapper" style="height: auto; overflow: hidden scroll;">
                                            <div class="simplebar-content" style="padding: 0px;">
                                                @foreach (var item in listaEmpresa)
                                                {
                                                    <h6 class="mb-1 text-primary">
                                                        <i class="mdi mdi-circle-medium align-middle text-primary me-1"></i>
                                                        @item.nombre
                                                    </h6>

                                                    @if (listaSala.Where(x => x.idConsorcio == @itemConsorcio.id && x.idEmpresa == item.idEmpresa).Count() > 0)
                                                    {
                                                        <table class="table align-middle table-nowrap">
                                                            <tbody>
                                                                @foreach (var itemSala in listaSala.Where(x => x.idConsorcio == @itemConsorcio.id && x.idEmpresa == item.idEmpresa))
                                                                {
                                                                    <tr>
                                                                        <td style="width: 50px;">
                                                                            <div class="font-size-22">
                                                                                <i class="bx bxs-circle" style="color: @(itemSala.estado == 1? "#34C38F" : "#F46A6A")"></i>
                                                                            </div>
                                                                        </td>

                                                                        <td>
                                                                            <div>
                                                                                <h5 class="font-size-14 mb-0">@itemSala.nombre</h5>
                                                                                <small class="mb-0"><i>Código Empresa:</i> @itemSala.idEmpresa</small>
                                                                                <small class="mb-0">, <i>Código Sala: </i>@itemSala.idSala</small>
                                                                            </div>
                                                                        </td>
                                                                    </tr>

                                                                }

                                                            </tbody>
                                                        </table>
                                                    }


                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div><div class="simplebar-placeholder" style="width: auto; height: 473px;">
                            </div>
                            <div class="simplebar-track simplebar-horizontal" style="visibility: hidden;"><div class="simplebar-scrollbar" style="transform: translate3d(0px, 0px, 0px); display: none;"></div></div><div class="simplebar-track simplebar-vertical" style="visibility: visible;"><div class="simplebar-scrollbar" style="height: 230px; transform: translate3d(0px, 0px, 0px); display: block;"></div></div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-sm-4 align-self-center">
                    <div>
                        <img src="assets/images/crypto/features-img/img-1.png" alt="" class="img-fluid d-block">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    List<Consorcio> listaConsorcio { get; set; }
    lstEstados estados = new lstEstados();
    List<lstEstados> listaEstados { get; set; }

    List<Empresa> listaEmpresa { get; set; }
    List<Sala> listaSala { get; set; }

    Consorcio itemConsorcio = new Consorcio();

    bool mostrarModal = false;
    bool mostrarDetalle = false;
    string categoria = "";


    protected override async Task OnInitializedAsync()
    {
        await Task.Run(getDatos);
    }

    private async void getDatos()
    {
        listaConsorcio = new List<Consorcio>();
        listaEmpresa = new List<Empresa>();
        listaSala = new List<Sala>();
        listaEstados = estados.getEstados();

        listaConsorcio = await consorcioService.GetAll();
        listaEmpresa = await empresaService.GetAll();
        listaSala = await salaService.GetAll();
    }

    void Nuevo()
    {
        itemConsorcio = new Consorcio();
        categoria = "Nueva";
        mostrarModal = true;
        StateHasChanged();
    }

    void Detalle(int id)
    {
        itemConsorcio = listaConsorcio.Where(x => x.id == id).FirstOrDefault();
        listaEmpresa = listaEmpresa.Where(x => x.idConsorcio == id).ToList();
        listaSala = listaSala.Where(x => x.idConsorcio == id).ToList();
        mostrarDetalle = true;
    }

    void Editar(int id)
    {
        try
        {
            itemConsorcio = new Consorcio();
            categoria = "Editar";
            itemConsorcio = listaConsorcio.Where(x => x.id == id).FirstOrDefault();
            mostrarModal = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            itemConsorcio = null;
        }
    }

    async void Registrar()
    {
        try
        {
            //esta registrando no editando
            if (itemConsorcio.id == 0)
            {
                if (String.IsNullOrEmpty(itemConsorcio.nombre))
                {
                    await Swal.FireAsync("Alerta", "Todos los campos deben estar llenos para proceder con el registro", SweetAlertIcon.Error);
                }
                else
                {
                    bool rptaInsert = consorcioService.Insertar(itemConsorcio);
                    if (rptaInsert)
                    {
                        await Swal.FireAsync("Realizado", "El proceso se ha realizado con éxito", SweetAlertIcon.Success);
                        Close();
                    }
                    else
                    {
                        await Swal.FireAsync("Alerta", "Hubo un problema al registar los datos de la sala", SweetAlertIcon.Error);
                    }

                }
            }
            //quiere decir que se esta insertando
            else
            {
                if (String.IsNullOrEmpty(itemConsorcio.nombre))
                {
                    await Swal.FireAsync("Alerta", "Todos los campos deben estar llenos para proceder con el registro", SweetAlertIcon.Error);
                }
                else
                {
                    bool rptaInsert = consorcioService.Update(itemConsorcio);
                    if (rptaInsert)
                    {
                        await Swal.FireAsync("Realizado", "El proceso se ha realizado con éxito", SweetAlertIcon.Success);
                        Close();
                    }
                    else
                    {
                        await Swal.FireAsync("Alerta", "Hubo un problema al actualizar los datos de la sala", SweetAlertIcon.Error);
                    }
                }
            }
        }
        catch (Exception ex)
        {
            await Swal.FireAsync("Alerta", $"hubo un error en: {ex.Message.ToString()}", SweetAlertIcon.Warning);
        }
        getDatos();
        StateHasChanged();
    }


    async void Actualizar()
    {
        getDatos();
        StateHasChanged();
    }

    void Exportar()
    {

    }

    void Close()
    {
        mostrarModal = false;
        StateHasChanged();
    }

    void CloseCanvas()
    {
        mostrarDetalle = false;
        StateHasChanged();
    }
}
