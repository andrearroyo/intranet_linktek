@page "/control/planes/paquete"
@inject IPaqueteService paqueteService
@inject ISistemaService sistemaService
@inject IPaqueteSistemaService paqueteSistemaService

@inject SweetAlertService Swal


<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">

                <div class="float-end dropdown ms-2">
                    <a class="text-muted" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="mdi mdi-dots-horizontal font-size-18"></i>
                    </a>

                    <div class="dropdown-menu dropdown-menu-end">
                        <a class="dropdown-item" @onclick="Nuevo">Nuevo</a>
                        <a class="dropdown-item" @onclick="Actualizar">Actualizar</a>
                        <a class="dropdown-item" @onclick="Exportar">Exportar</a>
                    </div>
                </div>

                <h4 class="card-title mb-4">Listado de Paquetes</h4>

                @if (listaPaquete == null)
                {
                    <div class="spinner"></div>
                }
                else
                {
                    <div class="table-responsive">

                        @if (listaPaquete.Count() > 0 || listaPaquete != null)
                        {
                            <table class="table align-middle table-nowrap mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th class="align-middle">Id</th>
                                        <th class="align-middle">Nombre</th>
                                        <th class="align-middle">Tipo</th>
                                        <th class="align-middle">Estado</th>
                                        <th class="align-middle">Opciones</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in listaPaquete)
                                    {
                                        <tr>
                                            <td><a class="text-body fw-bold">@item.idPaquete</a> </td>
                                            <td>@item.nombre</td>
                                            <td>
                                                @if(item.tipo == 1)
                                                {
                                                    <span class="badge badge-pill badge-soft-success font-size-11">Normal</span>
                                                }
                                                @if(item.tipo == 2)
                                                {
                                                    <span class="badge badge-pill badge-soft-warning font-size-11">Especial</span>
                                                }
                                                @if(item.tipo == 3)
                                                {
                                                    <span class="badge badge-pill badge-soft-danger font-size-11">Único</span>
                                                }
                                            </td>
                                            <td>
                                                @if(item.estado == 1)
                                                {
                                                    <span class="badge badge-pill badge-soft-success font-size-11">Activo</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-pill badge-soft-danger font-size-11">inactivo</span>
                                                }
                                            </td>
                                            <td>
                                                <button type="button" @onclick="() => Editar(item.idPaquete)" class="btn btn-warning btn-sm btn-rounded waves-effect waves-light" data-bs-toggle="modal" data-bs-target=".transaction-detailModal">
                                                    Editar
                                                </button>
                                                <button type="button" @onclick="() => Asignacion(item.idPaquete)" class="btn btn-info btn-sm btn-rounded waves-effect waves-light" style="margin-left: 5px;" data-bs-toggle="modal" data-bs-target=".transaction-detailModal">
                                                    Asignar Sistemas
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@if (mostrarModal)
{
    <div class="modal fade bs-example-modal-lg show" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-modal="true" role="dialog" style="display: block;">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@categoria Consorcio</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="">
                            <label for="lblEmpresa" class="col-form-label">Nombre Sistema:</label>
                            <input type="text" class="form-control" id="lblEmpresa" @bind-value="@itemPaquete.nombre">
                        </div>

                        <div class="col-12 d-flex">
                            <div class="col-6" style="margin-right: 5px;">
                                <div class="">
                                    <label for="lblDireccion" class="col-form-label">Tipo:</label>
                                    <select class="form-select" @bind="@itemPaquete.estado">
                                        <option value="-1">Seleccione estado</option>
                                        @foreach (var item in listaEstados)
                                        {
                                            if (item.id == itemPaquete.estado)
                                            {
                                                <option value="@item.id" selected>@item.nombre</option>
                                            }
                                            else
                                            {
                                                <option value="@item.id">@item.nombre</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-6" style="margin-right: 5px;">
                                <div class="">
                                    <label for="lblDireccion" class="col-form-label">Estado:</label>
                                    <select class="form-select" @bind="@itemPaquete.estado">
                                        <option value="-1">Seleccione estado</option>
                                        @foreach (var item in listaEstados)
                                        {
                                            if (item.id == itemPaquete.estado)
                                            {
                                                <option value="@item.id" selected>@item.nombre</option>
                                            }
                                            else
                                            {
                                                <option value="@item.id">@item.nombre</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="Close">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="Registrar">Registrar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@if (mostrarAsignacion)
{
    <div class="modal fade bs-example-modal-lg show" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-modal="true" role="dialog" style="display: block;">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Asignación de Sistemas</h5>
                    <p class="card-title-desc">@itemPaquete.nombre</p>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseAsignacion"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="">
                            <label for="lblEmpresa" class="col-form-label">Seleccione lo sistemas para el paquete:</label>
                            <TelerikMultiSelect Data="@listaSistema"
                                                @bind-Value="@SelectedProductIds"
                                                ValueField="@nameof(Sistema.idSistema)"
                                                TextField="@nameof(Sistema.nombre)"
                                                OnChange="@PopulateSelectedProducts"
                                                Placeholder="Seleccione Sistemas"
                                                Id="products-multiselect" Width="100%"
                                                Class= "select2 form-control select2-multiple select2-hidden-accessible">
                            </TelerikMultiSelect>


                        </div>

                        
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="CloseAsignacion">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="RegistrarAsignacion">Registrar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}




@code {
    List<Paquete> listaPaquete { get; set; }
    List<PaqueteSistema> listaPaqueteSistema { get; set; }
    List<Sistema> listaSistema { get; set; }
    lstEstados estados = new lstEstados();
    List<lstEstados> listaEstados { get; set; }
    Paquete itemPaquete = new Paquete();

    List<int> SelectedProductIds = new List<int>();
    List<string> SelectedProductNames = new List<string>();

    bool mostrarModal = false;
    bool mostrarAsignacion = false;
    string categoria = "";

    async void getDatos()
    {
        listaPaquete = new List<Paquete>();
        listaSistema = new List<Sistema>();
        listaPaqueteSistema = new List<PaqueteSistema>();

        listaPaquete = await paqueteService.GetAll();
        listaSistema = await sistemaService.GetAll();
        listaPaqueteSistema = await paqueteSistemaService.GetAllPaqueteSistema();

        listaEstados = estados.getEstados();
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(getDatos);
    }

    void PopulateSelectedProducts()
    {
        SelectedProductNames = listaSistema.Where(p => SelectedProductIds.Contains(p.idSistema)).Select(p => p.nombre).ToList();
        SelectedProductIds = listaSistema.Where(p => SelectedProductIds.Contains(p.idSistema)).Select(p => p.idSistema).ToList();
    }

    void Nuevo()
    {
        itemPaquete = new Paquete();
        categoria = "Nuevo";
        mostrarModal = true;
        StateHasChanged();
    }

    void Asignacion(int id)
    {
        itemPaquete = new Paquete();
        itemPaquete = listaPaquete.Where(x => x.idPaquete == id).FirstOrDefault();
        SelectedProductIds = new List<int>();
        SelectedProductNames = new List<string>();
        //listaPaquete = listaPaquete.Where(x => x.idPaquete == id).ToList();

        var temporal = listaPaqueteSistema.Where(x=>x.idPaquete == id).ToList();

        foreach (var item in temporal)
        {
            SelectedProductIds.Add(item.idSistema);
            SelectedProductNames.Add(item.nombre_sistema);
        }

        mostrarAsignacion = true;
    }

    void Editar(int id)
    {
        try
        {
            itemPaquete = new Paquete();
            categoria = "Editar";
            itemPaquete = listaPaquete.Where(x => x.idPaquete == id).FirstOrDefault();
            mostrarModal = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            itemPaquete = null;
        }
    }

    async void Actualizar()
    {
        getDatos();
        StateHasChanged();
    }

    void Exportar()
    {

    }

    void Close()
    {
        mostrarModal = false;
        StateHasChanged();
    }

    void CloseAsignacion()
    {
        mostrarAsignacion = false;
        StateHasChanged();
    }

    async void Registrar()
    {
        try
        {
            //esta registrando no editando
            if (itemPaquete.idPaquete == 0)
            {
                if (String.IsNullOrEmpty(itemPaquete.nombre))
                {
                    await Swal.FireAsync("Alerta", "Todos los campos deben estar llenos para proceder con el registro", SweetAlertIcon.Error);
                }
                else
                {
                    bool rptaInsert = paqueteService.Insertar(itemPaquete);
                    if (rptaInsert)
                    {
                        await Swal.FireAsync("Realizado", "El proceso se ha realizado con éxito", SweetAlertIcon.Success);
                        Close();
                    }
                    else
                    {
                        await Swal.FireAsync("Alerta", "Hubo un problema al registar los datos de la sala", SweetAlertIcon.Error);
                    }

                }
            }
            //quiere decir que se esta insertando
            else
            {
                if (String.IsNullOrEmpty(itemPaquete.nombre))
                {
                    await Swal.FireAsync("Alerta", "Todos los campos deben estar llenos para proceder con el registro", SweetAlertIcon.Error);
                }
                else
                {
                    bool rptaInsert = paqueteService.Update(itemPaquete);
                    if (rptaInsert)
                    {
                        await Swal.FireAsync("Realizado", "El proceso se ha realizado con éxito", SweetAlertIcon.Success);
                        Close();
                    }
                    else
                    {
                        await Swal.FireAsync("Alerta", "Hubo un problema al actualizar los datos de la sala", SweetAlertIcon.Error);
                    }
                }
            }
        }
        catch (Exception ex)
        {
            await Swal.FireAsync("Alerta", $"hubo un error en: {ex.Message.ToString()}", SweetAlertIcon.Warning);
        }
        getDatos();
        StateHasChanged();
    }

    async void RegistrarAsignacion()
    {
        if (SelectedProductIds.Count() > 0)
        {
            foreach (var item in SelectedProductIds)
            {
                PaqueteSistema ps = new PaqueteSistema
                {
                    idPaqueteSistema = 0,
                    idPaquete = itemPaquete.idPaquete,
                    idSistema = item, 
                    estado = 1,
                    nombre_paquete = "",
                    nombre_sistema = "",
                    version_sistema = "",
                };

                var rpta = paqueteSistemaService.Insertar(ps);

                if (rpta)
                {
                    await Swal.FireAsync("Realizado", "El proceso se ha realizado con éxito", SweetAlertIcon.Success);
                }
                else
                {
                    await Swal.FireAsync("Alerta", "Hubo un problema al actualizar los datos de la sala", SweetAlertIcon.Error);
                }
                ps = new PaqueteSistema();
            }
        }
    }


}
